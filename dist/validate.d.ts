declare function isString(test: unknown): test is string;
declare function isStringValid(test: unknown): test is string;
declare const isArray: (arg: any) => arg is any[];
declare function isArrayValid(test: unknown): test is unknown[];
declare function isStringOrArray(test: unknown): test is string | unknown[];
declare function isBase64(test: unknown): boolean;
declare function isBoolean(test: unknown): test is boolean;
declare function isBooleanString(test: unknown): test is "true" | "false";
declare function isBooleanNumber(test: unknown): test is 0 | 1;
declare function isBooleanAny(test: unknown): boolean;
declare function isCreditCardNumber(test: unknown): boolean;
declare function isDate(test: unknown): boolean;
declare function isEmail(test: unknown): boolean;
declare function isFunction(test: unknown): test is Function;
declare function isHTTP(test: unknown): boolean;
declare function isJSON(test: unknown): boolean;
declare function isJSONString(test: unknown): boolean;
declare function isJWT(test: unknown): boolean;
declare function isNumber(test: unknown): boolean;
declare function isObject(test: unknown): test is Record<string, unknown>;
declare function isObjectValid(test: unknown): boolean;
declare function isRegex(test: unknown): test is RegExp;
declare function isURL(test: unknown): boolean;
declare function isValid(test: unknown, testAll?: boolean): boolean;
export { isString, isStringValid, isArray, isArrayValid, isStringOrArray, isBase64, isBoolean, isBooleanString, isBooleanNumber, isBooleanAny, isCreditCardNumber, isDate, isEmail, isFunction, isHTTP, isJSON, isJSONString, isJWT, isNumber, isObject, isObjectValid, isRegex, isURL, isValid, };
